<div id="archive-container">
	<div id="archive-list">
		<div class="archive-item" id="item-original">
			<img src="" alt="" class="archive-item-image">
			<div class="archive-item-texts">
				<h3 class="archive-item-title">Comic Name here</h3>
				<p class="archive-item-desc">Description here, can also be longer i think</p>
				<a href="" class="hidden-button" tabindex="-1"></a>
			</div>
		</div>
	</div>
	
	<div id="slide-seperator"></div>

	<div id="page-bottom-controls">
		<div id="sort-container">
			<label for="sort-select">Sort by:</label>
			<select id="sort-select">
				<option value="date-newest">Newest</option>
				<option value="date-oldest">Oldest</option>
				<option value="title" disabled>Name</option>
			</select>
		</div>
		<div id="page-container">
			<button class="primary-button"><|</button>
			<button class="primary-button"><</button>
	
			<p>1/1</p>
	
			<button class="primary-button">></button>
			<button class="primary-button">|></button>
		</div>
		<div id="search-container">
			<input type="text" id="search-input" placeholder="Search...">
			<button class="primary-button" id="search-button">Search</button>
		</div>
	</div>
</div>

<script>
	const archiveList = document.getElementById("archive-list");

	function showErrorBox(message) {
		alert(message);
	}

	function updateURLandButtons() {}

	function addArchiveItem(title, description, imageURL, comicURL) {
		const originalItem = document.getElementById("item-original");
		const clone = originalItem.cloneNode(true);

		clone.id = ""; // Clear the ID for the cloned item
		clone.querySelector(".archive-item-title").textContent = title;
		clone.querySelector(".archive-item-desc").textContent = description;
		clone.querySelector(".archive-item-image").src = imageURL;
		clone.querySelector(".hidden-button").href = comicURL;
		//clone.style.display = "flex";

		archiveList.appendChild(clone);
	}

	function loadArchive() {
		axios.get("/api/v1/comics")
			.then(response => {
				const comics = response.data.comics;
				console.log(comics)
				comics.forEach(comic => {
					addArchiveItem(comic.title, comic.subtitle, `/uploads/static/${comic.previewImageName}`, `/comic/${comic.internalId}`);
				});
			})
			.catch(error => {
				console.error("Error loading comics:", error);
				
				if(error.message) {
					showErrorBox(`Could not load comics. \n${error.message}`);
				} else {
					showErrorBox(`Could not load comics. Error code: ${error.status}`)
				}
			});
	}

	loadArchive();
	//addArchiveItem("Punchroot", "This is a description for archive item 1.", "https://moggel.ch/uploads/static/1750433084052-994774183.jpeg", "#");
</script>